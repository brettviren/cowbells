Reflectivity of "magic box" detector.

* Hits

** Summary

Mean number of hits in up and downstream PMTs for 2GeV protons through water measured with 1000 protons.

|------+----------+------------+-------------|
| ref% | upstream | downstream | up/down (%) |
|------+----------+------------+-------------|
|    2 |    0.186 |       34.8 |        0.53 |
|    5 |    0.454 |       36.3 |        1.25 |
|   10 |    0.312 |       38.3 |        0.81 |
|   25 |     2.64 |       45.3 |        5.83 |
|   50 |     14.1 |       57.3 |       24.61 |
|  100 |      143 |        129 |      110.85 |
|------+----------+------------+-------------|
#+TBLFM: $4=100*$2/$3;%.2f

Run with 10k events for 0, 2, 5 and 10%

| ref% | upstream | downstream | up/down (%) | u/d unc (%) | n up |
|------+----------+------------+-------------+-------------+------|
|    0 |     2143 |     337947 |        0.63 |       0.014 |  280 |
|    2 |     1263 |     346834 |        0.36 |       0.010 |  464 |
|    5 |     1770 |     358916 |        0.49 |       0.012 |  949 |
|   10 |     4023 |     383227 |        1.05 |       0.017 | 2590 |
|------+----------+------------+-------------+-------------+------|
#+TBLFM: $4=100*$2/$3;%.2f :: $5=100*sqrt(1/$2 + 1/$3)*$2/$3;%.3f

Uncertainties are simply on the total counts and are Poisson,
propagation is Gaussian.  The "n up" column gives how many events out
of 10k have at least one PE in the upstream PMT.

Qualitatively the same picture.

For now take the reflectivity to be below 10% and assign an uncertainty of ~2/30 = 6% in the overall light collection in the simulation due to the uncertainty of the reflectivity.


** plots

This makes the plots if they are not already made
#+name: plots
#+BEGIN_SRC python :exports both :results none
  import refl
  #reflectivities = refl.reflectivities
  reflectivities = [0.25]
  for obj in map(refl.make_usds, reflectivities):
      obj.plots()
#+END_SRC

#+BEGIN_SRC python :wrap LATEX :exports results 
  import refl, util
  final = []
  for ref in refl.reflectivities:
      usds = refl.make_usds(ref)
      files = usds.get_plots()
      tex =  util.format_list_latex(files)
      final.append(tex)
  return '\n\n'.join(final)
#+END_SRC

#+RESULTS:
#+BEGIN_LATEX
#+END_LATEX

