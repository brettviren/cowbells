//
// File generated by rootcint at Mon Apr  9 17:35:50 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME WCMapDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "WCMapDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void MCEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MCEvent(void *p = 0);
   static void *newArray_MCEvent(Long_t size, void *p);
   static void delete_MCEvent(void *p);
   static void deleteArray_MCEvent(void *p);
   static void destruct_MCEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MCEvent*)
   {
      ::MCEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MCEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MCEvent", ::MCEvent::Class_Version(), "./MCEvent.h", 47,
                  typeid(::MCEvent), DefineBehavior(ptr, ptr),
                  &::MCEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MCEvent) );
      instance.SetNew(&new_MCEvent);
      instance.SetNewArray(&newArray_MCEvent);
      instance.SetDelete(&delete_MCEvent);
      instance.SetDeleteArray(&deleteArray_MCEvent);
      instance.SetDestructor(&destruct_MCEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MCEvent*)
   {
      return GenerateInitInstanceLocal((::MCEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MCEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSim_Draw_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSim_Draw(void *p);
   static void deleteArray_WCSim_Draw(void *p);
   static void destruct_WCSim_Draw(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSim_Draw*)
   {
      ::WCSim_Draw *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSim_Draw >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSim_Draw", ::WCSim_Draw::Class_Version(), "./WCSim_Draw.h", 79,
                  typeid(::WCSim_Draw), DefineBehavior(ptr, ptr),
                  &::WCSim_Draw::Dictionary, isa_proxy, 4,
                  sizeof(::WCSim_Draw) );
      instance.SetDelete(&delete_WCSim_Draw);
      instance.SetDeleteArray(&deleteArray_WCSim_Draw);
      instance.SetDestructor(&destruct_WCSim_Draw);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSim_Draw*)
   {
      return GenerateInitInstanceLocal((::WCSim_Draw*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSim_Draw*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *MCEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MCEvent::Class_Name()
{
   return "MCEvent";
}

//______________________________________________________________________________
const char *MCEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MCEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MCEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MCEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MCEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSim_Draw::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSim_Draw::Class_Name()
{
   return "WCSim_Draw";
}

//______________________________________________________________________________
const char *WCSim_Draw::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSim_Draw*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSim_Draw::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSim_Draw*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSim_Draw::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSim_Draw*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSim_Draw::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSim_Draw*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void MCEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MCEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MCEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MCEvent::Class(),this);
   }
}

//______________________________________________________________________________
void MCEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MCEvent.
      TClass *R__cl = ::MCEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcsimrootevent", &wcsimrootevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcsimrootgeom", &wcsimrootgeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcsimrootcherenkovhit", &wcsimrootcherenkovhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcsimrootcherenkovdigihit", &wcsimrootcherenkovdigihit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt", &pmt);
      R__insp.InspectMember(pmt, "pmt.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PMTmap", (void*)&PMTmap);
      R__insp.InspectMember("map<Int_t,Int_t>", (void*)&PMTmap, "PMTmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digitime[2]", digitime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitid", &hitid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digihitid", &digihitid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tracks[100]", tracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntracks", &ntracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertex_x", &vertex_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertex_y", &vertex_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertex_z", &vertex_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_pos[500000][3]", pmt_pos);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MCEvent(void *p) {
      return  p ? new(p) ::MCEvent : new ::MCEvent;
   }
   static void *newArray_MCEvent(Long_t nElements, void *p) {
      return p ? new(p) ::MCEvent[nElements] : new ::MCEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MCEvent(void *p) {
      delete ((::MCEvent*)p);
   }
   static void deleteArray_MCEvent(void *p) {
      delete [] ((::MCEvent*)p);
   }
   static void destruct_MCEvent(void *p) {
      typedef ::MCEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MCEvent

//______________________________________________________________________________
void WCSim_Draw::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSim_Draw.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSim_Draw::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSim_Draw::Class(),this);
   }
}

//______________________________________________________________________________
void WCSim_Draw::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSim_Draw.
      TClass *R__cl = ::WCSim_Draw::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEcan", &fEcan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStatusBar", &fStatusBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*file", &file);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tree", &tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gtree", &gtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcsimrootevent", &wcsimrootevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcsimrootgeom", &wcsimrootgeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcsimroottrigger", &wcsimroottrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*branch", &branch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gbranch", &gbranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventno", &eventno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ncolors", &ncolors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npe_cut", &npe_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "log_scale", &log_scale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag_vr", &flag_vr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "setno", &setno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fListBox", &fListBox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTeh1", &fTeh1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTeh2", &fTeh2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTeh3", &fTeh3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTeh4", &fTeh4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTeh5", &fTeh5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTeh6", &fTeh6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTbh1", &fTbh1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTbh2", &fTbh2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTbh3", &fTbh3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTbh4", &fTbh4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTbh5", &fTbh5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTbh6", &fTbh6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*temp", &temp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WCMain", &WCMain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WCTop", &WCTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WCBottom", &WCBottom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*l1", &l1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*l2", &l2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*l3", &l3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*l4", &l4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WCTop1", &WCTop1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WCBottom1", &WCBottom1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "palette_Choice", &palette_Choice);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DIM_X", &DIM_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DIM_Y", &DIM_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NBINS_X", &NBINS_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NBINS_Y", &NBINS_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Draw_Mode", &Draw_Mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "padNum", &padNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*subPad", &subPad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*empty_hist[5]", &empty_hist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevent", &mcevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isPi0", &isPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ref_index", &ref_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ltiming_cut", &ltiming_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "htiming_cut", &htiming_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckMulti", &fCheckMulti);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSelected", &fSelected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tracks[100]", tracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackid[100]", trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntracks", &ntracks);
      TGMainFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSim_Draw(void *p) {
      delete ((::WCSim_Draw*)p);
   }
   static void deleteArray_WCSim_Draw(void *p) {
      delete [] ((::WCSim_Draw*)p);
   }
   static void destruct_WCSim_Draw(void *p) {
      typedef ::WCSim_Draw current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSim_Draw

namespace ROOT {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,int>

/********************************************************
* WCMapDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableWCMapDict();

extern "C" void G__set_cpp_environmentWCMapDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MCEvent.h");
  G__add_compiledheader("WCSim_Draw.h");
  G__cpp_reset_tagtableWCMapDict();
}
#include <new>
extern "C" int G__cpp_dllrevWCMapDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MCEvent */
static int G__WCMapDict_471_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MCEvent[n];
     } else {
       p = new((void*) gvp) MCEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MCEvent;
     } else {
       p = new((void*) gvp) MCEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCMapDictLN_MCEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MCEvent(
(WCSimRootTrigger*) G__int(libp->para[0]), (WCSimRootGeom*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) MCEvent(
(WCSimRootTrigger*) G__int(libp->para[0]), (WCSimRootGeom*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCMapDictLN_MCEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCEvent*) G__getstructoffset())->FindEnergyandTimeScales();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCEvent*) G__getstructoffset())->SetCherenkovHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetEnergyRatio((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetEnergyRatio_s((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetEnergy((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetTime((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetTimeRatio((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetGammaRatio((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetPosition((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MCEvent*) G__getstructoffset())->GetTubeID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetMaxEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetMinEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetMaxTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetMinTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetMaxDigiTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetMinDigiTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetGammaEnergy((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetGammaVertex((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetRealVertex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCEvent*) G__getstructoffset())->SetPMTMap();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCEvent*) G__getstructoffset())->SetCherenkovDigiHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetDigiEnergyRatio((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetDigiTimeRatio((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetDigiGammaRatio((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MCEvent*) G__getstructoffset())->GetDigiPosition((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCEvent*) G__getstructoffset())->SetPMT(*((WCSimRootPMT*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MCEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MCEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MCEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MCEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MCEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MCEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_471_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MCEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCMapDict_471_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MCEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MCEvent(*(MCEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCMapDictLN_MCEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MCEvent G__TMCEvent;
static int G__WCMapDict_471_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MCEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MCEvent*) (soff+(sizeof(MCEvent)*i)))->~G__TMCEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MCEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MCEvent*) (soff))->~G__TMCEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCMapDict_471_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MCEvent* dest = (MCEvent*) G__getstructoffset();
   *dest = *(MCEvent*) libp->para[0].ref;
   const MCEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSim_Draw */
static int G__WCMapDict_787_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSim_Draw* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSim_Draw(
*((TString*) G__int(libp->para[0])), (TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) WCSim_Draw(
*((TString*) G__int(libp->para[0])), (TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->DoExit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->DoDraw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->DoNext();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->DoPrev();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->DoSave();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SetSetNo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SetEventNo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SetPalette((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SetRef_Index((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SetTiming_lcut((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SetTiming_hcut((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SetFlagVR((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SetDrawMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SetLogType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SetNPE_cut((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->PrintEventNo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->DoText((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->GetDimensions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSim_Draw*) G__getstructoffset())->DrawBackground((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSim_Draw*) G__getstructoffset())->DrawBackground();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->DrawBackground((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->DrawSignal((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSim_Draw*) G__getstructoffset())->Create2TonePalette((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSim_Draw*) G__getstructoffset())->Create2TonePalette();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSim_Draw*) G__getstructoffset())->CreateMultiColorPalette((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSim_Draw*) G__getstructoffset())->CreateMultiColorPalette();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((WCSim_Draw*) G__getstructoffset())->DrawColorLegend((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((WCSim_Draw*) G__getstructoffset())->DrawColorLegend((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSim_Draw*) G__getstructoffset())->DrawColorLegend();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->DrawColorLegend((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->PrintGammaInfo((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((WCSim_Draw*) G__getstructoffset())->DrawSizeLegend((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((WCSim_Draw*) G__getstructoffset())->DrawSizeLegend((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSim_Draw*) G__getstructoffset())->DrawSizeLegend();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->DrawSizeLegend((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((WCSim_Draw*) G__getstructoffset())->DrawPMT((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Bool_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((WCSim_Draw*) G__getstructoffset())->DrawPMT((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((WCSim_Draw*) G__getstructoffset())->DrawPMT((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SwitchToSubcanvas((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->HandleButtons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SaveAs(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->SaveAs((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((WCSim_Draw*) G__getstructoffset())->DrawVertexLegend((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((WCSim_Draw*) G__getstructoffset())->DrawVertexLegend((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((WCSim_Draw*) G__getstructoffset())->DrawVertexLegend((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((WCSim_Draw*) G__getstructoffset())->DrawVertexLegend((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSim_Draw*) G__getstructoffset())->DrawVertexLegend();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((WCSim_Draw*) G__getstructoffset())->DrawVertex((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((WCSim_Draw*) G__getstructoffset())->DrawVertex((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((WCSim_Draw*) G__getstructoffset())->ProjectToTankSurface_C((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::vector<Float_t> >* pobj;
         vector<std::vector<Float_t> > xobj = ((WCSim_Draw*) G__getstructoffset())->FindRing((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
         pobj = new vector<std::vector<Float_t> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((WCSim_Draw*) G__getstructoffset())->ProjectToTankSurface_M((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((WCSim_Draw*) G__getstructoffset())->DrawRing((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((WCSim_Draw*) G__getstructoffset())->DrawRing((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((WCSim_Draw*) G__getstructoffset())->DrawRing((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((WCSim_Draw*) G__getstructoffset())->DrawRing((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSim_Draw::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSim_Draw::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSim_Draw::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSim_Draw::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSim_Draw*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSim_Draw::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSim_Draw::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSim_Draw::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCMapDict_787_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSim_Draw::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSim_Draw G__TWCSim_Draw;
static int G__WCMapDict_787_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSim_Draw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSim_Draw*) (soff+(sizeof(WCSim_Draw)*i)))->~G__TWCSim_Draw();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSim_Draw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSim_Draw*) (soff))->~G__TWCSim_Draw();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MCEvent */

/* WCSim_Draw */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncWCMapDict {
 public:
  G__Sizep2memfuncWCMapDict(): p(&G__Sizep2memfuncWCMapDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncWCMapDict::*p)();
};

size_t G__get_sizep2memfuncWCMapDict()
{
  G__Sizep2memfuncWCMapDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceWCMapDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCMapDictLN_MCEvent))) {
     MCEvent *G__Lderived;
     G__Lderived=(MCEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCMapDictLN_MCEvent),G__get_linked_tagnum(&G__WCMapDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw))) {
     WCSim_Draw *G__Lderived;
     G__Lderived=(WCSim_Draw*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw),G__get_linked_tagnum(&G__WCMapDictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw),G__get_linked_tagnum(&G__WCMapDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw),G__get_linked_tagnum(&G__WCMapDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw),G__get_linked_tagnum(&G__WCMapDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw),G__get_linked_tagnum(&G__WCMapDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw),G__get_linked_tagnum(&G__WCMapDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw),G__get_linked_tagnum(&G__WCMapDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableWCMapDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCMapDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCMapDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__WCMapDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCMapDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCMapDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCMapDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCMapDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__WCMapDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__WCMapDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__WCMapDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__WCMapDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCMapDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCMapDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,Int_t>",117,G__get_linked_tagnum(&G__WCMapDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__WCMapDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__WCMapDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__WCMapDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Float_t> >",117,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCMapDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCMapDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__WCMapDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MCEvent */
static void G__setup_memvarMCEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCMapDictLN_MCEvent));
   { MCEvent *p; p=(MCEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_WCSimRootTrigger),-1,-1,2,"wcsimrootevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_WCSimRootGeom),-1,-1,2,"wcsimrootgeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_WCSimRootCherenkovHit),-1,-1,2,"wcsimrootcherenkovhit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_WCSimRootCherenkovDigiHit),-1,-1,2,"wcsimrootcherenkovdigihit=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCMapDictLN_WCSimRootPMT),-1,-1,2,"pmt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCMapDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<Int_t,Int_t>"),-1,2,"PMTmap=",0,"relates PMT list # to PMT ID");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"energy=",0,"max charge");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"time[2]=",0,"average, standard deviation");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"digitime[2]=",0,"average, standard deviation");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"hitid=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"digihitid=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"tracks[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ntracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"vertex_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"vertex_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"vertex_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pmt_pos[500000][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSim_Draw */
static void G__setup_memvarWCSim_Draw(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw));
   { WCSim_Draw *p; p=(WCSim_Draw*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TRootEmbeddedCanvas),-1,-1,4,"fEcan=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGStatusBar),-1,-1,4,"fStatusBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TFile),-1,-1,4,"file=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TTree),-1,-1,4,"tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TTree),-1,-1,4,"gtree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_WCSimRootEvent),-1,-1,4,"wcsimrootevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_WCSimRootGeom),-1,-1,4,"wcsimrootgeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_WCSimRootTrigger),-1,-1,4,"wcsimroottrigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TBranch),-1,-1,4,"branch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TBranch),-1,-1,4,"gbranch=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eventno=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ncolors=",0,"number of colors used for map");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"npe_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"log_scale=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"flag_vr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"setno=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGListBox),-1,-1,4,"fListBox=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextEntry),-1,-1,4,"fTeh1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextEntry),-1,-1,4,"fTeh2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextEntry),-1,-1,4,"fTeh3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextEntry),-1,-1,4,"fTeh4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextEntry),-1,-1,4,"fTeh5=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextEntry),-1,-1,4,"fTeh6=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextBuffer),-1,-1,4,"fTbh1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextBuffer),-1,-1,4,"fTbh2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextBuffer),-1,-1,4,"fTbh3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextBuffer),-1,-1,4,"fTbh4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextBuffer),-1,-1,4,"fTbh5=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGTextBuffer),-1,-1,4,"fTbh6=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TClonesArray),-1,-1,4,"temp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TBox),-1,-1,4,"WCMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TEllipse),-1,-1,4,"WCTop=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TEllipse),-1,-1,4,"WCBottom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TLine),-1,-1,4,"l1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TLine),-1,-1,4,"l2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TLine),-1,-1,4,"l3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TLine),-1,-1,4,"l4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TBox),-1,-1,4,"WCTop1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TBox),-1,-1,4,"WCBottom1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"palette_Choice=",0,"0 = multicolor, 1 = 2 tone");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"DIM_X=",0,"x-dimension of canvas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"DIM_Y=",0,"y-dimension of canvas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"NBINS_X=",0,"number of bins in x-dimension");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"NBINS_Y=",0,"number of bins in y-dimension");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Draw_Mode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"padNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TPad),-1,-1,4,"subPad=",0,"for drawing to canvas corners");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TH2F),-1,-1,4,"empty_hist[5]=",0,"blank histogram for title, axis labels, etc");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_MCEvent),-1,-1,4,"mcevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isPi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ref_index=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ltiming_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"htiming_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TGCheckButton),-1,-1,4,"fCheckMulti=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TList),-1,-1,4,"fSelected=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tracks)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tracks[100]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trackid[100]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ntracks)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ntracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCMapDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarWCMapDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMCEvent(void) {
   /* MCEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCMapDictLN_MCEvent));
   G__memfunc_setup("MCEvent",658,G__WCMapDict_471_0_1, 105, G__get_linked_tagnum(&G__WCMapDictLN_MCEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCEvent",658,G__WCMapDict_471_0_2, 105, G__get_linked_tagnum(&G__WCMapDictLN_MCEvent), -1, 0, 4, 1, 1, 0, 
"U 'WCSimRootTrigger' - 0 - evt U 'WCSimRootGeom' - 0 - geom "
"I - 'Int_t' 0 - a i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindEnergyandTimeScales",2312,G__WCMapDict_471_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "done as in SuperScan (sort of)", (void*) NULL, 0);
   G__memfunc_setup("SetCherenkovHit",1526,G__WCMapDict_471_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyRatio",1417,G__WCMapDict_471_0_5, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "ith PMT normalized to maxEnergy", (void*) NULL, 0);
   G__memfunc_setup("GetEnergyRatio_s",1627,G__WCMapDict_471_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "ith PMT normalized to maxEnergy", (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__WCMapDict_471_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__WCMapDict_471_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeRatio",1198,G__WCMapDict_471_0_9, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "ith PMT normalized to maxTime", (void*) NULL, 0);
   G__memfunc_setup("GetGammaRatio",1282,G__WCMapDict_471_0_10, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "ith PMT", (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__WCMapDict_471_0_11, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", "ith PMT", (void*) NULL, 0);
   G__memfunc_setup("GetTubeID",829,G__WCMapDict_471_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxEnergy",1200,G__WCMapDict_471_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinEnergy",1198,G__WCMapDict_471_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxTime",981,G__WCMapDict_471_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinTime",979,G__WCMapDict_471_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxDigiTime",1362,G__WCMapDict_471_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinDigiTime",1360,G__WCMapDict_471_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGammaEnergy",1389,G__WCMapDict_471_0_19, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGammaVertex",1409,G__WCMapDict_471_0_20, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRealVertex",1314,G__WCMapDict_471_0_21, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPMTMap",827,G__WCMapDict_471_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCherenkovDigiHit",1907,G__WCMapDict_471_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigiEnergyRatio",1798,G__WCMapDict_471_0_24, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "ith DIGIPMT normalized to maxEnergy", (void*) NULL, 0);
   G__memfunc_setup("GetDigiTimeRatio",1579,G__WCMapDict_471_0_25, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "ith DIGIPMT normalized to maxDigiTime", (void*) NULL, 0);
   G__memfunc_setup("GetDigiGammaRatio",1663,G__WCMapDict_471_0_26, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "ith DIGIPMT", (void*) NULL, 0);
   G__memfunc_setup("GetDigiPosition",1522,G__WCMapDict_471_0_27, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", "ith DIGIPMT", (void*) NULL, 0);
   G__memfunc_setup("SetPMT",541,G__WCMapDict_471_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'WCSimRootPMT' - 0 - pmt_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCMapDict_471_0_29, 85, G__get_linked_tagnum(&G__WCMapDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MCEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCMapDict_471_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCMapDict_471_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MCEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCMapDict_471_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MCEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCMapDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCMapDict_471_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCMapDict_471_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCMapDict_471_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MCEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCMapDict_471_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MCEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCMapDict_471_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MCEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCEvent", 658, G__WCMapDict_471_0_41, (int) ('i'), G__get_linked_tagnum(&G__WCMapDictLN_MCEvent), -1, 0, 1, 1, 1, 0, "u 'MCEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCEvent", 784, G__WCMapDict_471_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCMapDict_471_0_43, (int) ('u'), G__get_linked_tagnum(&G__WCMapDictLN_MCEvent), -1, 1, 1, 1, 1, 0, "u 'MCEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSim_Draw(void) {
   /* WCSim_Draw */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw));
   G__memfunc_setup("WCSim_Draw",944,G__WCMapDict_787_0_1, 105, G__get_linked_tagnum(&G__WCMapDictLN_WCSim_Draw), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - filename U 'TGWindow' - 10 - p "
"h - 'UInt_t' 0 - w h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoExit",589,G__WCMapDict_787_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoDraw",577,G__WCMapDict_787_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoNext",594,G__WCMapDict_787_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoPrev",592,G__WCMapDict_787_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoSave",578,G__WCMapDict_787_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSetNo",789,G__WCMapDict_787_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventNo",1003,G__WCMapDict_787_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPalette",1019,G__WCMapDict_787_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRef_Index",1184,G__WCMapDict_787_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTiming_lcut",1451,G__WCMapDict_787_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTiming_hcut",1447,G__WCMapDict_787_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFlagVR",846,G__WCMapDict_787_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrawMode",1087,G__WCMapDict_787_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogType",1008,G__WCMapDict_787_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNPE_cut",954,G__WCMapDict_787_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEventNo",1228,G__WCMapDict_787_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoText",600,G__WCMapDict_787_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDimensions",1337,G__WCMapDict_787_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", "retrieves dimensions from geometry tree", (void*) NULL, 0);
   G__memfunc_setup("DrawBackground",1422,G__WCMapDict_787_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"Water Cherenkov Detector\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawBackground",1422,G__WCMapDict_787_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - event", "same as above, with event # in name", (void*) NULL, 0);
   G__memfunc_setup("DrawSignal",1004,G__WCMapDict_787_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create2TonePalette",1771,G__WCMapDict_787_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '100' nclrs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMultiColorPalette",2349,G__WCMapDict_787_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '100' nclrs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawColorLegend",1500,G__WCMapDict_787_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"min\"' min C - - 10 '\"max\"' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawColorLegend",1500,G__WCMapDict_787_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - min f - 'Float_t' 0 - max "
"i - 'Int_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintGammaInfo",1404,G__WCMapDict_787_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - gamma1E f - 'Float_t' 0 - gamma2E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSizeLegend",1400,G__WCMapDict_787_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"min\"' min C - - 10 '\"max\"' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSizeLegend",1400,G__WCMapDict_787_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - min f - 'Float_t' 0 - max "
"i - 'Int_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawPMT",639,G__WCMapDict_787_0_30, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z f - 'Float_t' 0 - color "
"f - 'Float_t' 0 '0.6875' size g - 'Bool_t' 0 'false' isReduced", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SwitchToSubcanvas",1755,G__WCMapDict_787_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleButtons",1339,G__WCMapDict_787_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAs",579,G__WCMapDict_787_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAs",579,G__WCMapDict_787_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - set i - 'Int_t' 0 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawVertexLegend",1627,G__WCMapDict_787_0_35, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 '1' real i - 'Int_t' 0 '1' rec "
"i - 'Int_t' 0 '1' gamma1 i - 'Int_t' 0 '1' gamma2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawVertex",1036,G__WCMapDict_787_0_36, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z i - 'Int_t' 0 '2' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProjectToTankSurface_C",2195,G__WCMapDict_787_0_37, 117, G__get_linked_tagnum(&G__WCMapDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 2, 1, 1, 0, 
"F - 'Float_t' 0 - vtx F - 'Float_t' 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRing",785,G__WCMapDict_787_0_38, 117, G__get_linked_tagnum(&G__WCMapDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), G__defined_typename("vector<std::vector<Float_t> >"), 0, 4, 1, 1, 0, 
"F - 'Float_t' 0 - vertex F - 'Float_t' 0 - dir "
"i - 'Int_t' 0 - resolution f - 'Float_t' 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProjectToTankSurface_M",2205,G__WCMapDict_787_0_39, 117, G__get_linked_tagnum(&G__WCMapDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 2, 1, 1, 0, 
"F - 'Float_t' 0 - vtx F - 'Float_t' 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawRing",798,G__WCMapDict_787_0_40, 121, -1, -1, 0, 5, 1, 1, 0, 
"F - 'Float_t' 0 - vertex F - 'Float_t' 0 - dir "
"i - 'Int_t' 0 '200' resolution f - 'Float_t' 0 '42' theta "
"i - 'Int_t' 0 '3' color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCMapDict_787_0_41, 85, G__get_linked_tagnum(&G__WCMapDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSim_Draw::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCMapDict_787_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSim_Draw::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCMapDict_787_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSim_Draw::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCMapDict_787_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSim_Draw::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCMapDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCMapDict_787_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCMapDict_787_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSim_Draw::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCMapDict_787_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSim_Draw::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCMapDict_787_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSim_Draw::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCMapDict_787_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSim_Draw::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~WCSim_Draw", 1070, G__WCMapDict_787_0_53, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncWCMapDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalWCMapDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcWCMapDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__WCMapDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__WCMapDictLN_WCSimRootCherenkovHit = { "WCSimRootCherenkovHit" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_WCSimRootCherenkovDigiHit = { "WCSimRootCherenkovDigiHit" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_WCSimRootTrigger = { "WCSimRootTrigger" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_WCSimRootEvent = { "WCSimRootEvent" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_WCSimRootPMT = { "WCSimRootPMT" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_WCSimRootGeom = { "WCSimRootGeom" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_MCEvent = { "MCEvent" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TGListBox = { "TGListBox" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TBox = { "TBox" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TGStatusBar = { "TGStatusBar" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TGTextBuffer = { "TGTextBuffer" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TEllipse = { "TEllipse" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_WCSim_Draw = { "WCSim_Draw" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__WCMapDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableWCMapDict() {
  G__WCMapDictLN_TClass.tagnum = -1 ;
  G__WCMapDictLN_TBuffer.tagnum = -1 ;
  G__WCMapDictLN_TMemberInspector.tagnum = -1 ;
  G__WCMapDictLN_TObject.tagnum = -1 ;
  G__WCMapDictLN_TString.tagnum = -1 ;
  G__WCMapDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__WCMapDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__WCMapDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__WCMapDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCMapDictLN_TList.tagnum = -1 ;
  G__WCMapDictLN_TClonesArray.tagnum = -1 ;
  G__WCMapDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__WCMapDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__WCMapDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__WCMapDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__WCMapDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__WCMapDictLN_WCSimRootCherenkovHit.tagnum = -1 ;
  G__WCMapDictLN_WCSimRootCherenkovDigiHit.tagnum = -1 ;
  G__WCMapDictLN_WCSimRootTrigger.tagnum = -1 ;
  G__WCMapDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__WCMapDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCMapDictLN_WCSimRootEvent.tagnum = -1 ;
  G__WCMapDictLN_WCSimRootPMT.tagnum = -1 ;
  G__WCMapDictLN_WCSimRootGeom.tagnum = -1 ;
  G__WCMapDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__WCMapDictLN_MCEvent.tagnum = -1 ;
  G__WCMapDictLN_TQObject.tagnum = -1 ;
  G__WCMapDictLN_TGWindow.tagnum = -1 ;
  G__WCMapDictLN_TGObject.tagnum = -1 ;
  G__WCMapDictLN_TGFrame.tagnum = -1 ;
  G__WCMapDictLN_TGCompositeFrame.tagnum = -1 ;
  G__WCMapDictLN_TGMainFrame.tagnum = -1 ;
  G__WCMapDictLN_TGCheckButton.tagnum = -1 ;
  G__WCMapDictLN_TGListBox.tagnum = -1 ;
  G__WCMapDictLN_TBox.tagnum = -1 ;
  G__WCMapDictLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__WCMapDictLN_TGStatusBar.tagnum = -1 ;
  G__WCMapDictLN_TGTextBuffer.tagnum = -1 ;
  G__WCMapDictLN_TGTextEntry.tagnum = -1 ;
  G__WCMapDictLN_TPad.tagnum = -1 ;
  G__WCMapDictLN_TH2F.tagnum = -1 ;
  G__WCMapDictLN_TFile.tagnum = -1 ;
  G__WCMapDictLN_TTree.tagnum = -1 ;
  G__WCMapDictLN_TBranch.tagnum = -1 ;
  G__WCMapDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__WCMapDictLN_TEllipse.tagnum = -1 ;
  G__WCMapDictLN_TLine.tagnum = -1 ;
  G__WCMapDictLN_WCSim_Draw.tagnum = -1 ;
  G__WCMapDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__WCMapDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableWCMapDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TString);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TList);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_WCSimRootCherenkovHit);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_WCSimRootCherenkovDigiHit);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_WCSimRootTrigger);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_WCSimRootEvent);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_WCSimRootPMT);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_WCSimRootGeom);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCMapDictLN_MCEvent),sizeof(MCEvent),-1,324864,(char*)NULL,G__setup_memvarMCEvent,G__setup_memfuncMCEvent);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TGObject);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TGCheckButton);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TGListBox);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TBox);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TGStatusBar);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TGTextBuffer);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TGTextEntry);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TPad);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TEllipse);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_TLine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCMapDictLN_WCSim_Draw),sizeof(WCSim_Draw),-1,324608,(char*)NULL,G__setup_memvarWCSim_Draw,G__setup_memfuncWCSim_Draw);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCMapDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupWCMapDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupWCMapDict()");
  G__set_cpp_environmentWCMapDict();
  G__cpp_setup_tagtableWCMapDict();

  G__cpp_setup_inheritanceWCMapDict();

  G__cpp_setup_typetableWCMapDict();

  G__cpp_setup_memvarWCMapDict();

  G__cpp_setup_memfuncWCMapDict();
  G__cpp_setup_globalWCMapDict();
  G__cpp_setup_funcWCMapDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncWCMapDict();
  return;
}
class G__cpp_setup_initWCMapDict {
  public:
    G__cpp_setup_initWCMapDict() { G__add_setup_func("WCMapDict",(G__incsetup)(&G__cpp_setupWCMapDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initWCMapDict() { G__remove_setup_func("WCMapDict"); }
};
G__cpp_setup_initWCMapDict G__cpp_setup_initializerWCMapDict;

