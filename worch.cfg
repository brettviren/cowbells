# A worch software suite configuration file
# see https://github.com/brettviren/worch

[start]
groups = buildtools, dependencies, dingdong
tools = extras.modulesfile
features = tarball, autoconf, makemake, modulesfile
download_dir = downloads
source_dir = sources
build_dir = builds/{package}-{version}-{tagsdashed}
install_dir = {PREFIX}/{package}/{version}/{tagsdashed}
out_dir = {out}


[group buildtools]
packages = cmake, modules

[group dependencies]
packages = python, ipython, gccxml, root, xercesc, geant
environment = group:buildtools, package:cmake

[group dingdong]
packages = cowbells
environment = group:dependencies, group:buildtools

[package cmake] 
version = 2.8.11
features = tarball, prepare, makemake, modulesfile
source_url = http://www.cmake.org/files/v{version_2digit}/{source_archive_file}
unpacked_target = bootstrap
prepare_cmd = ../../{source_dir}/{source_unpacked}/bootstrap
prepare_cmd_options = --prefix={install_dir}
prepare_target = cmake_install.cmake
build_target = bin/cmake
install_target = bin/cmake
export_PATH = prepend:{install_dir}/bin
export_CMAKE_DIR = {install_dir}

[package modules]
version = 3.2.10
features = tarball, autoconf, makemake
source_url = http://prdownloads.sourceforge.net/{package}/{source_archive_file}
unpacked_target = configure
prepare_cmd_options = --without-x
build_target = modulecmd
install_target = Modules/{version}/bin/modulecmd
# Modules will self-manage version
install_dir = {PREFIX}

[package gccxml]
version = 20130920
features = vcs, cmake, makemake, modulesfile
source_url = git://github.com/gccxml/gccxml.git
vcs_tag = b040a46352e4d5c11a0304e4fcb6f7842008942a
vcs_flavor = git
unpacked_target = README.rst
build_target = bin/gccxml
install_target = bin/gccxml
export_PATH = prepend:{install_dir}/bin
export_GCCXML_DIR = {install_dir}

[package python]
version = 2.7.5
features = tarball, autoconf, makemake, modulesfile
source_unpacked = Python-{version}
source_archive_file = {source_unpacked}.tgz
source_url = http://www.python.org/ftp/{package}/{version}/{source_archive_file}
unpacked_target = README
prepare_cmd_options = --prefix={install_dir} --enable-shared
build_target = python
install_target = bin/python
export_PATH = prepend:{install_dir}/bin
export_PYTHONHOME = set:{install_dir}
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_PYTHON_DIR = {install_dir}

[package ipython]
version = 1.1.0
features = tarball, pypackage, modulesfile
install_dir = {python_install_dir}
environment = package:python
depends = unpack:python_install
source_url = http://archive.ipython.org/release/{version}/{source_archive_file}
unpacked_target = setup.py
build_target = build/lib/IPython/__init__.py
install_target = bin/ipython
export_IPYTHON_DIR = {install_dir}

[package root]
version = 5.34.14
environment = group:buildtools, package:cmake, package:python, package:gccxml
features = tarball, cmake, makemake, modulesfile
source_url = ftp://root.cern.ch/{package}/{source_archive_file}
depends = prepare:python_install, prepare:gccxml_install
source_archive_file = {package}_v{version}.source.tar.gz
source_unpacked = {package}
unpacked_target = CMakeLists.txt
prepare_cmd_options = -Dpythia6=OFF -Dminuit2=ON -Dpython=ON -DPYTHON_LIBRARY={python_install_dir}/lib/libpython2.7.so -DPYTHON_INCLUDE_DIR={python_install_dir}/include/python2.7 -DGCCXML_EXECUTABLE={gccxml_install_dir}/bin/gccxml
build_cmd = make
# warning: root doesn't always "like" being built with "make -jN"
build_cmd_options = 
build_target = bin/root.exe
install_target = bin/root.exe
buildenv_VERBOSE = set:1
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_PATH = prepend:{install_dir}/bin
export_ROOTSYS = set:{install_dir}
export_PYTHONPATH = prepend:{install_dir}/lib
export_CMAKE_MODULE_PATH = prepend:{install_dir}/etc/cmake
export_ROOT_DIR = {install_dir}

[package xercesc]
version = 3.1.1
features = tarball, autoconf, makemake, modulesfile
source_unpacked=xerces-c-{version}
source_archive_file = {source_unpacked}.tar.gz
source_url = http://mirror.metrocast.net/apache/xerces/c/3/sources/{source_archive_file}
unpacked_target = README
build_target = src/libxerces-c.la
install_target = lib/libxerces-c.la
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib
export_XERCESC_DIR = {install_dir}

[package geant]
version = 4.9.6.p02
features = tarball, cmake, makemake, modulesfile
source_archive_file = {source_unpacked}.tar.gz
source_url = http://geant4.cern.ch/support/source/{source_archive_file}
source_unpacked = {package}{version}
unpacked_target = CMakeLists.txt
# fixme: hardcode compiler name
depends = prepare:xercesc_install
prepare_cmd_options = -DG4_ENABLE_CXX11=ON -DBUILD_STATIC_LIBS=ON -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_GDML=ON -DXERCESC_ROOT_DIR:STRING={xercesc_install_dir} 
build_cmd = make
build_cmd_options = -j10
build_target = outputs/library/{kernelname}-g++/libG4track.so
install_target = include/Geant4/G4Track.hh
export_LD_LIBRARY_PATH = prepend:{install_dir}/{libbits}
export_PATH = prepend:{install_dir}/bin
export_GEANT4_DIR = {install_dir}

[package cowbells]
version = HEAD
features = vcs, cmake, makemake, modulesfile
vcs_tag = HEAD
source_url = https://github.com/brettviren/cowbells.git
unpacked_target = README.org
build_target = bin/cowbells.exe
install_target = bin/cowbells.exe
export_COWBELLS_DIR = {install_dir}
export_PATH = prepend:{install_dir}/bin
export_PYTHONPATH = prepend:{install_dir}/python
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[keytype]
groups = group
packages = package
