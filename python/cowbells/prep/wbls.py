#!/usr/bin/env python
'''
WBLS properties
'''
name = 'WBLS'

import water
import cowbells
import util

cm = cowbells.units.cm
mm = cowbells.units.mm
eV = cowbells.units.eV
MeV = cowbells.units.MeV
ns = cowbells.units.ns

## initial, eroneous definition from WCSIM_WbLS
# parts =   [('Hydrogen', 0.659),
#            ('Oxygen', 0.309),
#            ('Sulfur', 0.0009),
#            ('Nitrogen', 0.000058),
#            ('Carbon', 0.031)]

# 1%, numbers from Minfang
parts =   [('Hydrogen', 0.1097),
           ('Oxygen', 0.8234),
           ('Sulfur', 0.0048),
           ('Nitrogen', 0.0001),
           ('Carbon', 0.0620)]
density = 0.9945



# Use some same as water
energy = water.energy

wbls_water_rindex_ratio = 1.3492/1.33427
rindex = [x*wbls_water_rindex_ratio for x in water.rindex]

# from WCSim_WbLS
# comment from there:
#      //Minfang's absorption length for Water LS
absorption = [x*cm for x in [
        7.9741, 9.02933, 10.4065, 12.2793, 
        14.974, 19.184, 26.6874, 40.128, 
        59.7291, 79.1575, 95.7229, 106.218, 
        112.507, 120.462, 145.254, 158.894, 
        169.348, 179.237, 186.752, 221.993, 
        365.279, 550.429, 709.167, 795.864, 
        871.504, 1037.87, 1132.69, 1201.08, 
        1508.48, 2390.09, 3230.6, 3795.21, 
        4513.81, 6037.13, 6544.36, 5550.56, 
        5040.82, 4574.07, 4116.67, 3714.29, 
        3250, 2806.82, 2386.47, 1937.25, 
        1520, 1064.66, 500.507, 370.037, 
        225.571, 137.989, 106.58, 22.1118, 
        13.3941, 12.6969, 12.8165, 13.1955, 
        13.2277, 12.6725, 13.429, 16.1433,
        ]]

# from WCSim_WbLS
# comment from there:
#    //Minfang' new scattering length for WA-LS
rayleigh = [x*cm for x in [
        167024, 158727, 150742, 143062, 135680, 
        128587, 121776, 115239, 108969, 102959, 
        97200.4, 91686.9, 86411.3, 81366.8, 76546.4, 
        71943.5, 67551.3, 63363.4, 59373.2, 55574.6, 
        51961.2, 48527, 45265.9, 42171.9, 39239.4, 
        36462.5, 33835.7, 31353.4, 29010.3, 26801, 
        24720.4, 22763.4, 20924.9, 19200.1, 17584.2, 
        16072.5, 14660.4, 13343.5, 12117.3, 10977.7, 
        9920.42, 8941.41, 8036.71, 7202.47, 6434.93, 
        5730.43, 5085.43, 4496.47, 3960.21, 3473.41, 
        3032.94, 2635.75, 2278.91, 1959.59, 1675.06, 
        1422.71, 1200, 1004.53, 830, 686.106,
        ]]

# Taken from WCSim_WbLS
wls_abs_factor = 0.7
wls_abs = [x*cm*wls_abs_factor for x in [
        1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 
        1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 
        1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 
        1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 
        1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 
        1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 
        1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 1e+09, 
        1e+09, 1e+09, 1e+09, 1e+09, 0.0226002, 0.01, 
        0.01, 0.01, 0.01, 0.0170268, 0.0356053, 0.0634218, 
        0.156279, 1e+09, 1e+09, 1e+09, 1e+09, 1e+09,
        ]]

#    // PPO emmission spectra 350 - 500 nm, per nm	
# has its own energy bins
ppo_ev = [x*eV for x in [
        2.48, 2.48497, 2.48996, 2.49497, 2.5, 2.50505, 2.51012, 2.51521, 
        2.52033, 2.52546, 2.53061, 2.53579, 2.54098, 2.5462, 2.55144, 
        2.5567, 2.56198, 2.56729, 2.57261, 2.57796, 2.58333, 2.58873, 
        2.59414, 2.59958, 2.60504, 2.61053, 2.61603, 2.62156, 2.62712, 
        2.6327, 2.6383, 2.64392, 2.64957, 2.65525, 2.66094, 2.66667, 2.67241, 
        2.67819, 2.68398, 2.6898, 2.69565, 2.70153, 2.70742, 2.71335, 2.7193, 
        2.72527, 2.73128, 2.73731, 2.74336, 2.74945, 2.75556, 2.76169, 2.76786,
        2.77405, 2.78027, 2.78652, 2.79279, 2.7991, 2.80543, 2.81179, 2.81818,
        2.8246, 2.83105, 2.83753, 2.84404, 2.85057, 2.85714, 2.86374, 2.87037,
        2.87703, 2.88372, 2.89044, 2.8972, 2.90398, 2.9108, 2.91765, 2.92453, 
        2.93144, 2.93839, 2.94537, 2.95238, 2.95943, 2.96651, 2.97362, 2.98077,
        2.98795, 2.99517, 3.00242, 3.00971, 3.01703, 3.02439, 3.03178, 3.03922,
        3.04668, 3.05419, 3.06173, 3.06931, 3.07692, 3.08458, 3.09227, 3.1, 
        3.10777, 3.11558, 3.12343, 3.13131, 3.13924, 3.14721, 3.15522, 3.16327,
        3.17136, 3.17949, 3.18766, 3.19588, 3.20413, 3.21244, 3.22078, 3.22917,
        3.2376, 3.24607, 3.25459, 3.26316, 3.27177, 3.28042, 3.28912, 3.29787, 
        3.30667, 3.31551, 3.3244, 3.33333, 3.34232, 3.35135, 3.36043, 3.36957, 
        3.37875, 3.38798, 3.39726, 3.40659, 3.41598, 3.42541, 3.4349, 3.44444, 
        3.45404, 3.46369, 3.47339, 3.48315, 3.49296, 3.50282, 3.51275, 3.52273,
        3.53276, 3.54286, 3.55301, 3.56322, 3.57349, 3.58382, 3.5942, 3.60465,
        3.61516, 3.62573, 3.63636, 3.64706, 3.65782, 3.66864, 3.67953, 3.69048,
        3.70149, 3.71257, 3.72372, 3.73494, 3.74622, 3.75758, 3.769, 3.78049, 
        3.79205, 3.80368, 3.81538, 3.82716, 3.83901, 3.85093, 3.86293, 3.875
        ]]
ppo_emm = [
    2541.54,3124.19,3061.53,3037.8,3698.67,2682.4,3551.49,2759.86,3549.34,
    3434.85,3779.92,4100.42,3573.68,4359.18,4937.79,3916.84,4559.36,4359.95,
    4504.64,4744.8,5043.93,5654.4,4739.68,5577.59,4973.95,5114.24,
    5886.61,6572.44,7289.24,6713.17,7610.77,7296.81,7752.18,7209.37,
    8106.91,8652.75,8943.43,9692.26,10176.6,10746.3,10344.3,11747.2,
    12292.9,12706.5,13556,14827.9,13919.1,15198.1,16352.7,18168,17326.5,
    19102.6,19121.2,19297.9,20172.8,21279.9,22889.7,22660.3,24429.1,
    25578.1,26114.2,27410.1,28629.8,30848.9,31421.5,33385.8,34967.8,
    36638.8,39489,41119.8,41312.2,46175.8,47118.9,48920,51622.4,54791.6,
    58833.2,62620.6,64913.7,65227.5,69206.7,71265.4,74701.7,75612.7,
    78768.2,82629.5,86460.1,89618.8,93470.3,97671.7,100672,106714,
    112347,116281,126265,129929,136126,144722,153333,158643,163860,
    174231,178955,183509,191875,197852,202880,205720,206079,210369,
    213376,219420,223711,230360,240491,246300,265669,275737,289692,
    303614,318762,343541,355450,356684,365008,364466,371400,373686,
    365578,363652,364942,357897,345898,337882,328196,326912,332908,
    349242,364969,388441,409957,445645,470487,484744,490104,470286,
    449700,417960,389115,367229,342705,309227,277736,246470,219790,
    213914,205007,213101,218003,215775,199186,160937,117169,70198.4,
    41187.8,23908.2,15660,10989,7110.49,5920.07,3889.67,3030.48,2725.32,
    2430.16,2282.4,1926.76,2187.97,1826.96,1279.74,1489.21,1777.18,
    ]


# collect everything together for easier bulk processing
_properties = {
    'BIRKS_CONSTANT':0.124*mm/MeV,
    'WLSTIMECONSTANT': 1.5*ns,
    'SCINTILLATIONYIELD': 90/MeV,
    'RESOLUTIONSCALE': 1.0,
    'FASTTIMECONSTANT': 1.23*ns,
    'SLOWTIMECONSTANT': 9.26*ns,
    'YIELDRATIO': 0.26,
    'RAYLEIGH':(energy,rayleigh),
    'ABSLENGTH':(energy,absorption),
    'RINDEX':(energy,rindex),
    'FASTCOMPONENT':(ppo_ev,ppo_emm),
    'SLOWCOMPONENT':(ppo_ev,ppo_emm),
    'WLSCOMPONENT':(ppo_ev,ppo_emm),
    'WLSABSLENGTH':(energy,wls_abs),
}

def materials(geo):
    'Make any materials'
    mat = util.make_mixture(geo, name, parts, density)
    med = util.make_medium(geo, mat)

def properties(pf):
    '''
    Save data into a properties file
    '''
    for pname, pval in _properties.iteritems():
        if isinstance(pval, tuple): # vector type
            pf.add(name,pname,zip(*pval))
        else:                   # scalar type
            pf.add(name,pname,[(0,pval)])
        continue
    return
